# Epsilon
# Copyright (C) 2018
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import pprint
import inspect
from . import dfa
from . import target
from . import version

class Target(target.Target):
    def __init__(self, args):
        super().__init__(args)
        self._automata = []

    def emit_header(self):
        print("# This file was generated by Epsilon {}".format(version.VERSION))
        print()
        print("import collections")
        print()
        print("Automaton = collections.namedtuple('Automaton',")
        print("        ['transitions', 'accepts', 'error'])")

    def emit_automaton(self, name, automaton):
        print()
        print("{} = {}".format(name, pprint.pformat(automaton)))
        self._automata.append(name)

    def emit_trailer(self):
        print()
        print("import bisect")
        print()
        print(inspect.getsource(dfa.NoMatchError))
        print(inspect.getsource(dfa.scan))
        if self._automata:
            print("if __name__ == \"__main__\":")
            print("    import sys")
            print("    text = (c for line in sys.stdin for c in line)")
            print("    for token, match in scan({}, text):".format(
                    self._automata[0]))
            print("        print(token, repr(match))")
